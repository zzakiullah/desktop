/* Mixins
 *
 */

@import 'variables';

@mixin clearfix() {
    &:after {
        content: '';
        display: table;
        clear: both;
    }
}

@mixin prefix($property, $value) {
    -webkit-#{$property}: #{$value};
    -moz-#{$property}: #{$value};
    -ms-#{$property}: #{$value};
    -o-#{$property}: #{$value};
    #{$property}: #{$value};
}

@mixin prefixFlex($property, $value, $prefixes) {
    @each $prefix in $prefixes {
        @if $prefix == webkit {
        -webkit-#{$property}: $value;
        } @else if $prefix == moz {
        -moz-#{$property}: $value;
        } @else if $prefix == ms {
        -ms-#{$property}: $value;
        } @else if $prefix == o {
        -o-#{$property}: $value;
        } @else if $prefix == spec {
        #{$property}: $value;
        } @else  {
        @warn 'Unrecognized prefix: #{$prefix}';
        }
    }
}

@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content;
    }
    @-moz-keyframes #{$name} {
        @content;
    }
    @-ms-keyframes #{$name} {
        @content;
    }
    @-o-keyframes #{$name} {
        @content;
    }
    @keyframes #{$name} {
        @content;
    }
}

@mixin transition($transition: 0.1s all) {
    @include prefix('transition', #{$transition});
}

@mixin transform($transform) {
    @include prefix('transform', #{$transform});
}

@mixin animation($animation) {
    @include prefix('animation', #{$animation});
}

@mixin gradient($from, $to, $fallback) {
    background: $fallback;
    background: -moz-linear-gradient(top, $from 0%, $to 100%);
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$from), color-stop(100%,$to));
    background: -webkit-linear-gradient(top, $from 0%, $to 100%);
    background: -ms-linear-gradient(top, $from 0%, $to 100%);
    background: -o-linear-gradient(top, $from 0%, $to 100%);
    background: linear-gradient(top bottom, $from 0%, $to 100%);
}

@mixin backface($visibility: hidden) {
    @include prefix('backface-visibility', #{$visibility});
}

@mixin box-sizing($box-sizing: border-box) {
    @include prefix('box-sizing', #{$box-sizing});
}

@mixin media($size) {
    @media only screen and (min-width: #{map-get($MEDIA, $size)}) {
        @content;
    }
}
